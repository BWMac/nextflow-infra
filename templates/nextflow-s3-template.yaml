AWSTemplateFormatVersion: 2010-09-09
Description: Private S3 Bucket

# Parameters
Parameters:
  Department:
    Description: 'The department for this resource'
    Type: String
    AllowedPattern: '^\S*$'
    ConstraintDescription: 'Must be string with no spaces'
  Project:
    Description: 'The name of the project that this resource is used for'
    Type: String
    AllowedPattern: '^\S*$'
    ConstraintDescription: 'Must be string with no spaces'
  OwnerEmail:
    Description: 'Email address of the owner of this resource'
    Type: String
    AllowedPattern: '^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$'
    ConstraintDescription: 'Must be an acceptable email address syntax(i.e. joe.smith@sagebase.org)'
  BucketName:
    Type: String
    Description: (Optional) Name of the created bucket.
  ReadWriteAccessArns:
    Type: CommaDelimitedList
    Default: "[]"
    Description: (Optional) Grant read/write access to accounts, groups, and users.
    ConstraintDescription: List of ARNs (i.e. ["arn:aws:iam::011223344556:user/jsmith", "arn:aws:iam::544332211006:user/rjones"]
  ReadOnlyAccessArns:
    Type: CommaDelimitedList
    Default: "[]"
    Description: (Optional) Grant read access to accounts, groups, and users.
    ConstraintDescription: List of ARNs (i.e. ["arn:aws:iam::011223344556:user/jsmith", "arn:aws:iam::544332211006:user/rjones"]

# Conditions
Conditions:
  HasBucketName: !Not [!Equals [!Ref BucketName, ""]]
  HasReadWriteAccessArns: !Not [!Equals [!Join [",", !Ref ReadWriteAccessArns], "[]"]]
  HasReadOnlyAccessArns: !Not [!Equals [!Join [",", !Ref ReadOnlyAccessArns], "[]"]]
  NoReadWriteAccessArns: !Equals [!Join [",", !Ref ReadWriteAccessArns], "[]"]

# Mappings
Mappings:
  Accounts:
    "035458030717":
      AdminRole: "arn:aws:iam::035458030717:role/aws-reserved/sso.amazonaws.com/AWSReservedSSO_Administrator_580e9f32ac55c4e7"
    "728882028485":
      AdminRole: "arn:aws:iam::728882028485:role/aws-reserved/sso.amazonaws.com/AWSReservedSSO_Administrator_3a9d61d0884be260"

# Resources
Resources:
  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !If [HasBucketName, !Ref BucketName, !Ref 'AWS::NoValue']
      AccessControl: Private
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerPreferred      
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  # Policy
  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref Bucket  
      PolicyDocument:
        Version: 2012-10-17
        Statement:

          - Sid: AllowDeleteAllowModify
            # denies all except modifying, deleting and emptying bucket
            Effect: Deny
            Principal: '*'
            NotAction:
              - "s3:Delete*"
              - "s3:GetBucket*"
              - "s3:ListBucket*"
              - "s3:PutBucket*"
            Resource:
              - !Sub arn:aws:s3:::${Bucket}
              - !Sub arn:aws:s3:::${Bucket}/*

          - Sid: AdminFullAccess
            # gives admin full access to bucket
            Effect: Allow
            Principal:
              AWS:
                - !Sub "arn:aws:iam::${AWS::AccountId}:root"
                - Fn::ImportValue: !Sub "${AWS::Region}-workflows-nextflow-ci-service-account-ServiceRoleArn"
                - !FindInMap [Accounts, !Ref AWS::AccountId, AdminRole]
            Action:
              - "s3:*"
            Resource:
              - !Sub arn:aws:s3:::${Bucket}
              - !Sub arn:aws:s3:::${Bucket}/*

          - !If
            - NoReadWriteAccessArns
            - Sid: ForgeUserReadWriteAccess
              # gives grantees read/write write access to the bucket with required --acl
              Effect: Allow
              Principal:
                AWS:
                  - Fn::ImportValue: !Sub "${AWS::Region}-nextflow-forge-service-user-ServiceUserArn"
              Action:
                - "s3:*Object*"  
              Condition:
                StringEquals:
                  s3:x-amz-acl: bucket-owner-full-control
              Resource:
                - !Sub arn:aws:s3:::${Bucket}/*   
            - !Ref AWS::NoValue 

          - !If
            - HasReadWriteAccessArns
            - Sid: ReadWriteAccess
              # gives grantees read/write write access to the bucket with required --acl
              Effect: Allow
              Principal:
                AWS: !Split
                  - ","
                  - !Join
                      - ","
                      - - Fn::ImportValue: !Sub "${AWS::Region}-nextflow-forge-service-user-ServiceUserArn"
                        - !Join
                            - ","
                            - !Ref ReadWriteAccessArns
              Action:
                - "s3:*Object*"  
              Condition:
                StringEquals:
                  s3:x-amz-acl: bucket-owner-full-control
              Resource:
                - !Sub arn:aws:s3:::${Bucket}/*   
            - !Ref AWS::NoValue 

          - !If
            - HasReadWriteAccessArns
            - Sid: ReadWriteBucketAccess
              # gives grantees with read/write access read access to the bucket
              Effect: Allow
              Principal:
                AWS: !Split
                  - ","
                  - !Join
                      - ","
                      - - Fn::ImportValue: !Sub "${AWS::Region}-nextflow-forge-service-user-ServiceUserArn"
                        - !Join
                            - ","
                            - !Ref ReadWriteAccessArns
              Action:
                - "s3:AbortMultipartUpload"
                - "s3:ListMultipartUploadParts"
                - "s3:ListBucket*"
                - "s3:GetBucketLocation"   
              Resource:
                - !Sub arn:aws:s3:::${Bucket}
                - !Sub arn:aws:s3:::${Bucket}/*
            - !Ref AWS::NoValue 

          - !If
            - HasReadOnlyAccessArns
            - Sid: ReadOnlyAccess
              # gives grantees read (only) access to the bucket
              Effect: Allow
              Principal:
                AWS: !Ref ReadOnlyAccessArns
              Action:
                - "s3:ListBucket*"
                - "s3:GetBucketLocation"
                - "s3:GetObject"
                - "s3:GetObjectAcl"
                - "s3:AbortMultipartUpload"
                - "s3:ListMultipartUploadParts"
              Resource:
                - !Sub arn:aws:s3:::${Bucket}
                - !Sub arn:aws:s3:::${Bucket}/*
            - !Ref AWS::NoValue 


# Outputs
Outputs:
  BucketName:
    Value: !Ref Bucket
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-BucketName'
  BucketArn:
    Value: !GetAtt Bucket.Arn
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-BucketArn'
