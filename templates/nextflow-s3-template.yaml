AWSTemplateFormatVersion: 2010-09-09
# Description: Custom Nextflow Bucket

# Parameters
Parameters:
  Department:
    # Description: 'The department for this resource'
    Type: String
    AllowedPattern: '^\S*$'
    ConstraintDescription: 'Must be string with no spaces'
  Project:
    # Description: 'The name of the project that this resource is used for'
    Type: String
    AllowedPattern: '^\S*$'
    ConstraintDescription: 'Must be string with no spaces'
  OwnerEmail:
    # Description: 'Email address of the owner of this resource'
    Type: String
    AllowedPattern: '^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$'
    ConstraintDescription: 'Must be an acceptable email address syntax(i.e. joe.smith@sagebase.org)'
  EncryptBucket:
    Type: String
    # Description: true (default) to encrypt bucket, false for no encryption
    # AllowedValues:
    #  - true
    #  - false
    # Default: true
  BucketName:
    Type: String
    # Description: (Optional) Name of the created bucket.
    # Default: ""
  GrantAccess:
    Type: CommaDelimitedList
    # Default: "[]"
    # Description: Grant bucket access to accounts, groups, and users.
    ConstraintDescription: List of ARNs (i.e. ["arn:aws:iam::011223344556:user/jsmith", "arn:aws:iam::544332211006:user/rjones"]
  AllowWriteBucket:
    Type: String
    # Description: true for read-write, false (default) for read-only bucket
    # AllowedValues:
    #   - true
    #   - false
    # Default: false

Conditions:
  AllowWrite: !Equals [!Ref AllowWriteBucket, true]
  AllowUserAccess: !Not [!Equals [!Join ['', !Ref GrantAccess], "[]"]]
  EnableEncryption: !Equals [!Ref EncryptBucket, true]
  DisableEncryption: !Not [!Condition EnableEncryption]
  HasBucketName: !Not [!Equals [!Ref BucketName, ""]]

# Resources
Resources:
  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !If [HasBucketName, !Ref BucketName, !Ref 'AWS::NoValue']
      AccessControl: Private
      # VersioningConfiguration:
        # SType: String
        # Description: Enabled to enable bucket versioning, default is Suspended
        # AllowedValues:
        #   - Enabled
        #   - Suspended
    # Default: Suspended

  # Policy
  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref Bucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:

          # - Sid: SynapseObjectAccess
          #   # If Synapse is a grantee, gives Synapse access to objects in the bucket (R/O or R/W, depending on AllowWrite)
          #   Effect: Allow
          #   Principal:
          #     AWS: !Ref GrantAccess
          #   Action:
          #     - !If [AllowWrite, "s3:*Object*", "s3:GetObject*"]
          #     - "s3:*MultipartUpload*"
          #   Condition:
          #     StringEquals:
          #       "aws:PrincipalAccount": "325565585839"
          #   Resource: !Sub "arn:aws:s3:::${Bucket}/*"

          - Sid: DenyAllBucketAccess
            # denies access to everyone
            Effect: Deny
            Principal:
              AWS: "*"
            Action:
              - "s3:*"
            Resource:
              - !Sub arn:aws:s3:::${Bucket}/*
              - !Sub arn:aws:s3:::${Bucket}

          - Sid: BucketAccess
            # gives grantees access to the bucket
            Effect: Allow
            Principal:
              AWS: !Ref GrantAccess
            Action:
              - "s3:ListBucket*"
              - "s3:GetBucketLocation"
            Resource:
              - !Sub arn:aws:s3:::${Bucket}/*
              - !Sub arn:aws:s3:::${Bucket}

          - Sid: ReadObjectAccess
            # give grantees read access to objects
            Effect: Allow
            Principal:
              AWS: !Ref GrantAccess
            Action:
              - "s3:GetObject"
              - "s3:GetObjectAcl"
              - "s3:AbortMultipartUpload"
              - "s3:ListMultipartUploadParts"
            Resource:
              - !Sub arn:aws:s3:::${Bucket}/*
              - !Sub arn:aws:s3:::${Bucket}

          - Sid: WriteAccess
            Effect: Allow
            Principal:
              AWS: !Ref GrantAccess
            Action:
              - !If [AllowWrite, "s3:*Object*", "s3:GetObject*"]
              - "s3:*MultipartUpload*"
            Resource:
              - !Sub arn:aws:s3:::${Bucket}/*
              - !Sub arn:aws:s3:::${Bucket}

# Outputs
Outputs:
  BucketName:
    Value: !Ref Bucket
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-BucketName'
  BucketArn:
    Value: !GetAtt Bucket.Arn
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-BucketArn'
